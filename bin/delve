#!/usr/bin/env ruby
# frozen_string_literal: true

require "thor"
require_relative "../lib/loader.rb"
require_relative "../app/cli/fields.rb"
require_relative "../app/cli/search.rb"

class Delve < Thor
  package_name "Delve, by Zendesk"

  def self.exit_on_failure?
    true
  end

  attr_reader :users, :tickets, :organizations

  desc "fields SOURCE", "List all the searchable fields in SOURCE"
  map "-f" => :fields
  option :users, aliases: "-u", desc: "Show the fields for the \"Users\" source"
  option :tickets, aliases: "-t", desc: "Show the fields for the \"Tickets\" source"
  option :organizations, aliases: "-o", desc: "Show the fields for the \"Organizations\" source"

  def fields
    show_help("fields") if CLI::Fields.call(options) == false
  end

  desc "search FIELD VALUE --SOURCE", "Searches a FIELD for VALUE in SOURCE"
  option :users, aliases: "-u", desc: "Search within the \"Users\" source"
  option :tickets, aliases: "-t", desc: "Search within the \"Tickets\" source"
  option :organizations, aliases: "-o", desc: "Search within the \"Organizations\" source"

  def search(field, value)
    show_help("search") if CLI::Search.call(field, value, options) == false
  end

  private

  def show_help(command)
    Delve.command_help(Thor::Base.shell.new, command)
  end
end

Delve.start
