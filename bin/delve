#!/usr/bin/env ruby
# frozen_string_literal: true

require "thor"
require_relative "../lib/loader.rb"
require_relative "../app/cli/fields.rb"
require_relative "../app/cli/fields/renderer.rb"
require_relative "../app/cli/search.rb"
require_relative "../app/cli/search/renderer.rb"

class Delve < Thor
  package_name "Delve, by Zendesk"

  def self.exit_on_failure?
    true
  end

  attr_reader :users, :tickets, :organizations

  desc "fields --SOURCE [users | tickets | organizations]", "List all the searchable fields in SOURCE [users | tickets | organizations]"
  map "-f" => :fields
  option :raw, aliases: "-r", desc: "Use machine-parseable output"

  def fields(source)
    results = CLI::Fields.call(source, options)

    unless results
      show_help("fields")
      return
    end

    CLI::Fields::Renderer.call(results, options)
  end

  desc "search SOURCE [users | tickets | organizations] FIELD VALUE", "Searches a FIELD for VALUE in SOURCE [users | tickets | organizations]"
  map "-s" => :search
  option :raw, aliases: "-r", desc: "Use machine-parseable output"

  def search(source, field, value)
    results = CLI::Search.call(source, field, value, options)

    unless results
      show_help("search")
      return
    end

    CLI::Search::Renderer.call(results, options)
  end

  private

  def show_help(command)
    Delve.command_help(Thor::Base.shell.new, command)
  end
end

Delve.start
